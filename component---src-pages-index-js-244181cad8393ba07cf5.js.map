{"version":3,"sources":["webpack:///./src/components/NumberTitle.js","webpack:///./src/components/SectionHeading.js","webpack:///./src/components/TextInput.js","webpack:///./src/components/MailSignup.js","webpack:///./src/components/HomeHeroContent.js","webpack:///./src/pages/index.js","webpack:///./src/components/PostList.js","webpack:///./src/assets/arrow-right.svg","webpack:///./src/utils/content-helpers.js","webpack:///./src/components/EqualHeight.js","webpack:///./src/components/PostListGroup.js"],"names":["Container","Object","styled_base_browser_esm","target","name","styles","Heading","NumberTitle","_ref","number","children","core_browser_esm","CircleIcon","SectionHeading","palette","grey","props","centered","StyledInput","white","useMailchimp","emailRef","_useState","useState","message","setMessage","_useState2","status","setStatus","handleSubmit","regenerator_default","a","mark","_callee","ev","value","data","wrap","_context","prev","next","preventDefault","current","addToMailchimp","group[9][2]","sent","msg","result","stop","_x","apply","this","arguments","MailSignupContainer","breakpoints","mobile","tablet","LayoutContainer","Response","_ref2","MailSignup","useRef","_useMailchimp","onSubmit","htmlFor","TextInput","ref","id","type","placeholder","required","ButtonAnchor","isAnchor","isSmall","isSecondary","dangerouslySetInnerHTML","__html","SocialLinks","Rule","HomeHeroContent","HomeHeroContent_Container","href","label","social_reddit_default","social_riot_default","social_stackexchange_default","components_MailSignup","ResourceList","list","map","i","title","link","key","rel","Wrapper","ShellWrapper","CalloutGroup","lightGrey","Section","SiteIndex","_ref3","location","_3649582889","notificationBarContent","structureNotificationBarContent","gettingStartedContent","structureGettingStartedContent","resourcesContent","structureResourcesContent","Layout","subtitle","heroContent","components_HomeHeroContent","SEO","PostListGroup","columns","length","refList","_ref4","index","description","tutorials","languages","resources","PostList","titleRef","components_NumberTitle","react_default","Fragment","pages_ResourceList","components_SectionHeading","_ref5","slug","slice","_ref6","Header","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","blue","HeaderTitle","HeaderLink","Content","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","_assets_arrow_right_svg__WEBPACK_IMPORTED_MODULE_5___default","React","__webpack_require__","ArrowRight","createElement","d","fill","fillRule","defaultProps","width","height","module","exports","default","getMarkdownFiles","allMarkdownRemark","edges","node","assign","frontmatter","html","filter","file","EqualHeight","nodes","handleResize","debounce","dimensionsList","style","maxHeight","minHeight","_node$getBoundingClie","getBoundingClientRect","top","values","reduce","accumulator","push","forEach","group","heightList","item","Math","max","_toConsumableArray","useEffect","window","addEventListener","removeEventListener","setTimeout","ThreeColumn","css","FourColumn","_ref$columns","components_EqualHeight"],"mappings":"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","file":"component---src-pages-index-js-244181cad8393ba07cf5.js","sourcesContent":["import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport CircleIcon from './CircleIcon'\n\nconst NumberTitle = ({\n  number,\n  children\n}) => (\n  <Container>\n    <CircleIcon><span>{number}</span></CircleIcon>\n    <Heading>{children}</Heading>\n  </Container>\n)\n\nconst Container = styled.div`\n  display: flex;\n  align-items: self-end;\n`\n\nconst Heading = styled.h3`\n  font-size: 19px;\n  flex-grow: 1;\n  margin-left: 12px;\n`\n\nexport default NumberTitle\n","import styled from \"@emotion/styled\"\nimport { palette } from \"../utils/variables\"\n\nconst SectionHeading = styled.h2`\n  border-bottom: 1px solid ${palette.grey};\n  padding-bottom: 30px;\n  text-align: ${props => props.centered && 'center'};\n`\n\nexport default SectionHeading\n","import styled from \"@emotion/styled\"\nimport { palette } from \"../utils/variables\"\n\nconst StyledInput = styled.input`\n  padding: 7px 0;\n  background: transparent;\n  border: 0 solid rgba(255, 255, 255, 0.5);\n  border-bottom-width: 1px;\n  border-radius: 0;\n  color: ${palette.white};\n  font-size: 14px;\n  font-weight: 300;\n  line-height: 24px;\n  width: 100%;\n  appearance: none;\n  margin-bottom: 0px;\n\n  &:focus {\n    border-color: rgba(255, 255, 255, 1);\n    outline: none;\n  }\n\n  &::placeholder {\n    color: white;\n    opacity: 1;\n  }\n`\n\nexport default StyledInput\n","import React, { useState, useRef } from \"react\"\nimport styled from \"@emotion/styled\"\nimport addToMailchimp from \"gatsby-plugin-mailchimp\"\nimport ButtonAnchor from \"./ButtonAnchor\"\nimport TextInput from \"./TextInput\"\nimport { breakpoints } from \"../utils/variables\"\n\nconst useMailchimp = (emailRef) => {\n  const [message, setMessage] = useState(null)\n  const [status, setStatus] = useState(null)\n\n  const handleSubmit = async ev => {\n    ev.preventDefault()\n\n    const { value } = emailRef.current\n    const data = await addToMailchimp(value, {\n      'group[9][2]': '2'\n    })\n\n    setMessage(data.msg)\n    setStatus(data.result)\n  }\n\n  return {\n    message,\n    status,\n    handleSubmit\n  }\n}\n\nconst MailSignup = () => {\n  const emailRef = useRef()\n  const { message, status, handleSubmit } = useMailchimp(emailRef)\n\n  return (\n    <MailSignupContainer onSubmit={handleSubmit}>\n      <LayoutContainer>\n        <label htmlFor=\"email\">Developer Mailing List</label>\n        <TextInput\n          ref={emailRef}\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n        />\n        <ButtonAnchor\n          type=\"submit\"\n          isAnchor={false}\n          isSmall\n          isSecondary\n        >\n          Submit\n        </ButtonAnchor>\n      </LayoutContainer>\n      {\n        message &&\n        <Response status={status} dangerouslySetInnerHTML={{ __html: message }} />\n      }\n    </MailSignupContainer>\n  )\n}\n\nconst getMessageColor = ({ status }) => {\n  switch (status) {\n    case 'error': return 'red'\n    case 'success': return 'green'\n    case 'ready':\n    default:\n      return 'white'\n  }\n}\n\nconst MailSignupContainer = styled.form`\n  position: relative;\n  max-width: 320px;\n  width: 100%;\n\n  label {\n    white-space: nowrap;\n    font-weight: 300;\n    font-size: 18px;\n  }\n\n  input {\n    margin: 10px 0 20px;\n    max-width: 400px;\n  }\n\n  @media (min-width: ${breakpoints.mobile}) {\n    max-width: 100%;\n\n    input {\n      margin: 2px 20px 0;\n    }\n\n    button {\n      align-self: flex-end;\n    }\n  }\n\n  @media (min-width: ${breakpoints.tablet}) {\n    border-top: none;\n    border-left: 1px solid rgba(255, 255, 255, 0.2);\n    margin-left: 40px;\n    padding-left: 40px;\n  }\n`\n\nconst LayoutContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-flow: column wrap;\n  width: 100%;\n\n  @media (min-width: ${breakpoints.mobile}) {\n    align-items: center;\n    flex-flow: row nowrap;\n  }\n`\n\nconst Response = styled.p`\n  position: absolute;\n  margin-top: 20px;\n  color: ${getMessageColor};\n`\n\nexport default MailSignup\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport MailSignup from \"./MailSignup\"\nimport CircleIcon from \"./CircleIcon\"\nimport { breakpoints } from \"../utils/variables\"\n\n// images\nimport RedditIcon from \"../assets/social-reddit.svg\"\nimport RiotIcon from \"../assets/social-riot.svg\"\nimport StackexchangeIcon from \"../assets/social-stackexchange.svg\"\n\nconst HomeHeroContent = () => (\n  <Container>\n    <SocialLinks>\n      <li>\n        <CircleIcon href=\"https://www.reddit.com/r/tezos\" label=\"Reddit\">\n          <RedditIcon />\n        </CircleIcon>\n      </li>\n      <li>\n        <CircleIcon href=\"https://riot.im/app/#/room/#freenode_#tezos:matrix.org\" label=\"Riot\">\n          <RiotIcon />\n        </CircleIcon>\n      </li>\n      <li>\n        <CircleIcon href=\"https://tezos.stackexchange.com/\" label=\"Stack Exchange\">\n          <StackexchangeIcon/>\n        </CircleIcon>\n      </li>\n    </SocialLinks>\n\n    <Rule />\n\n    <MailSignup />\n  </Container>\n)\n\nconst Container = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  width: 100%;\n\n  @media (min-width: ${breakpoints.mobile}) {\n    align-items: flex-start;\n  }\n\n  @media (min-width: ${breakpoints.tablet}) {\n    flex-flow: row nowrap;\n  }\n`\n\nconst SocialLinks = styled.ul`\n  display: inline-flex;\n  list-style: none;\n  margin: 0;\n\n  li {\n    margin-bottom: 0;\n  }\n\n  li + li {\n    margin-left: 12px;\n  }\n\n  @media (min-width: ${breakpoints.mobile}) {\n    display: flex;\n  }\n`\n\nconst Rule = styled.hr`\n  background-color: rgba(255, 255, 255, 0.2);\n  height: 1px;\n  margin: 40px auto;\n  width: 100%;\n\n  @media (min-width: ${breakpoints.mobile}) {\n    margin-left: 0;\n  }\n\n  @media (min-width: ${breakpoints.tablet}) {\n    display: none\n  }\n`\n\nexport default HomeHeroContent\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport styled from \"@emotion/styled\"\nimport SEO from \"../components/SEO\"\nimport Layout from \"../components/Layout\"\nimport ShellWrapper from \"../components/ShellWrapper\"\nimport NumberTitle from \"../components/NumberTitle\"\nimport PostList from \"../components/PostList\"\nimport PostListGroup from \"../components/PostListGroup\"\nimport SectionHeading from \"../components/SectionHeading\"\nimport HomeHeroContent from \"../components/HomeHeroContent\"\nimport { palette, breakpoints } from \"../utils/variables\"\nimport {\n  structureNotificationBarContent,\n  structureGettingStartedContent,\n  structureResourcesContent\n } from \"../utils/content-helpers\"\n\nconst query = graphql`\n  {\n    allMarkdownRemark(\n      sort: {\n        order: ASC,\n        fields: [frontmatter___priority]\n      }\n      filter: {\n        frontmatter: {\n          type: { regex: \"/(resource|getting-started|notification-bar)/\" }\n        }\n      }\n    ) {\n      edges {\n        node {\n          html\n          frontmatter {\n            type\n            slug\n            title\n            description\n            priority\n            link\n            tutorials {\n              title\n              link\n            }\n            languages {\n              title\n              link\n            }\n            resources {\n              title\n              link\n              description\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst ResourceList = ({ list }) => {\n  return (\n    <ul>\n      {\n        list.map(({ title, link }, i) => (\n          <li key={`${link}-${i}`}><a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{title}</a></li>\n        ))\n      }\n    </ul>\n  )\n}\n\nconst SiteIndex = ({ location }) => {\n  const data = useStaticQuery(query)\n  const notificationBarContent = structureNotificationBarContent(data)\n  const gettingStartedContent = structureGettingStartedContent(data)\n  const resourcesContent = structureResourcesContent(data)\n\n  return (\n    <Layout\n      location={location}\n      notificationBarContent={notificationBarContent}\n      title=\"Tezos Developer Portal\"\n      subtitle=\"Resources for Developers\"\n      heroContent={<HomeHeroContent />}\n    >\n      <SEO />\n\n      <Wrapper>\n        <CalloutGroup>\n          <h2>Getting Started</h2>\n\n          <PostListGroup columns={gettingStartedContent.length}>\n            {\n              (refList) =>\n                gettingStartedContent.map(({\n                  title,\n                  description,\n                  tutorials,\n                  languages,\n                  resources\n                }, index) => (\n                  <PostList\n                    key={title}\n                    titleRef={refList[index]}\n                    title={<NumberTitle number={index + 1}>{title}</NumberTitle>}\n                  >\n                    <p><small>{description}</small></p>\n\n                    {\n                      tutorials &&\n                      tutorials.length > 0 &&\n                      <React.Fragment>\n                        <h4>Tutorials</h4>\n                        <ResourceList list={tutorials} />\n                      </React.Fragment>\n                    }\n\n                    {\n                      languages &&\n                      languages.length > 0 &&\n                      <React.Fragment>\n                        <h4>Languages</h4>\n                        <ResourceList list={languages} />\n                      </React.Fragment>\n                    }\n\n                    {\n                      resources &&\n                      resources.length > 0 &&\n                      <React.Fragment>\n                        <h4>Resources</h4>\n                        <ResourceList list={resources} />\n                      </React.Fragment>\n                    }\n                  </PostList>\n                ))\n            }\n          </PostListGroup>\n        </CalloutGroup>\n\n        <Section>\n          <SectionHeading centered>Resources</SectionHeading>\n\n          <PostListGroup columns={resourcesContent.length}>\n            {\n              (refList) =>\n                resourcesContent.map(({ title, slug, resources }, index) => (\n                  <PostList\n                    key={title}\n                    titleRef={refList[index]}\n                    title={<h3>{title}</h3>}\n                    link={`/resources#${slug}`}\n                  >\n                    <ul>\n                      {\n                        resources\n                          .slice(0, 4)\n                          .map(({ link, title, description }) => (\n                            <li key={link}>\n                              <p><a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{title}</a></p>\n                              <p><small>{description}</small></p>\n                            </li>\n                          ))\n                      }\n                    </ul>\n                  </PostList>\n                ))\n            }\n          </PostListGroup>\n        </Section>\n      </Wrapper>\n    </Layout>\n  )\n}\n\n/* Content components */\nconst Wrapper = styled(ShellWrapper)`\n  padding-top: 20px;\n\n  & > * + * {\n    margin-top: 60px;\n  }\n\n  @media (min-width: ${breakpoints.mobile}) {\n    padding-top: 40px;\n\n    & > * + * {\n      margin-top: 80px;\n    }\n  }\n`\n\n/* Callout section */\nconst CalloutGroup = styled.section`\n  padding: 40px 20px 20px;\n  background-color: ${palette.lightGrey};\n\n  & > h2 {\n    text-align: center;\n    margin-bottom: 40px;\n  }\n\n  @media (min-width: ${breakpoints.mobile}) {\n    padding: 64px 40px 40px;\n\n    & > h2 {\n      margin-bottom: 64px;\n    }\n  }\n`\n\nconst Section = styled.section`\n  & > * + * {\n    margin-top: 40px;\n  }\n`\n\nexport default SiteIndex\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { palette } from \"../utils/variables\"\nimport ArrowSvg from \"../assets/arrow-right.svg\"\n\nconst PostList = ({\n  titleRef,\n  id,\n  title,\n  link,\n  children\n}) => (\n  <div id={id}>\n    <Header ref={titleRef}>\n      <HeaderTitle>{title}</HeaderTitle>\n      { link && (\n        <HeaderLink>\n          <a href={link}><span>View All</span> <ArrowSvg /></a>\n        </HeaderLink>\n      ) }\n    </Header>\n    <Content>\n      {children}\n    </Content>\n  </div>\n)\n\nconst Header = styled.header`\n  display: flex;\n  border-bottom: 3px solid ${palette.blue};\n  padding-bottom: 20px;\n  width: 100%;\n`\nconst HeaderTitle = styled.div`\n  flex-grow: 1;\n\n  h3 {\n    margin-bottom: 0;\n  }\n`\n\nconst HeaderLink = styled.div`\n  white-space: nowrap;\n\n  span {\n    margin-right: 5px;\n  }\n\n  svg {\n    position: relative;\n    top: 2px;\n  }\n\n  a {\n    font-weight: 400;\n\n    &:hover,\n    &:focus {\n      text-decoration: none;\n\n      span {\n        text-decoration: underline;\n      }\n    }\n  }\n`\n\nconst Content = styled.div`\n  margin-top: 30px;\n\n  & > * + * {\n    margin-top: 10px;\n  }\n\n  h4 {\n    margin-top: 25px;\n    margin-bottom: 18px;\n  }\n\n  ul {\n    list-style: none;\n    margin: 0;\n  }\n\n  li {\n    margin: 0;\n    padding: 0 0 8px 0;\n    border-bottom: 1px solid ${palette.grey};\n\n    & + li {\n      padding-top: 8px;\n    }\n\n    p {\n      margin: 0;\n\n      & + p {\n        margin-top: -2px;\n      }\n    }\n\n    small {\n      line-height: 20px;\n    }\n  }\n`\n\nexport default PostList\n","var React = require('react');\n\nfunction ArrowRight (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M0 15l7.5-7.5L0 0z\",\"fill\":\"#7691C4\",\"fillRule\":\"evenodd\"}));\n}\n\nArrowRight.defaultProps = {\"width\":\"8\",\"height\":\"15\"};\n\nmodule.exports = ArrowRight;\n\nArrowRight.default = ArrowRight;\n","export const getMarkdownFiles = (data) => {\n  return data.allMarkdownRemark.edges.map(({ node }) => ({\n    ...node.frontmatter,\n    html: node.html\n  }))\n}\n\nexport const structureNotificationBarContent = (data) => {\n  const files = getMarkdownFiles(data)\n  return files.filter(file => file.type === 'notification-bar')[0]\n}\n\nexport const structureGettingStartedContent = (data) => {\n  const files = getMarkdownFiles(data)\n  return files.filter(file => file.type === 'getting-started')\n}\n\nexport const structureResourcesContent = (data) => {\n  const files = getMarkdownFiles(data)\n  return files.filter(file => file.type === 'resource')\n}\n","import React, { useEffect } from \"react\"\nimport debounce from \"lodash.debounce\"\n\nconst EqualHeight = ({ nodes, children }) => {\n  const handleResize = debounce(() => {\n    const currentNodes = nodes.map(node => node.current).filter(a => a)\n    const dimensionsList = currentNodes.map(node => {\n      // remove any forced sizing information\n      node.style.height = 'auto'\n      node.style.maxHeight = ''\n      node.style.minHeight = ''\n\n      // get natural size\n      const { top, height } = node.getBoundingClientRect()\n      return { node, top, height }\n    })\n\n    // group nodes by top offset\n    const nodeGroups = Object.values(\n      dimensionsList.reduce((accumulator, { node, top, height }) => {\n        if (!accumulator[top]) accumulator[top] = []\n        accumulator[top].push({ node, height })\n        return accumulator\n      }, { })\n    )\n\n    // get max height and update height for each group\n    nodeGroups.forEach((group) => {\n      const heightList = group.map(item => item.height)\n      const maxHeight = Math.max(...heightList)\n\n      // update height using the max height\n      group.forEach(({ node }) => {\n        node.style.height = `${maxHeight}px`;\n      })\n    })\n  }, 50)\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    }\n  })\n\n  // init\n  setTimeout(handleResize)\n\n  return (\n    <React.Fragment>\n      {children}\n    </React.Fragment>\n  )\n}\n\nexport default EqualHeight\n","import React, { useRef } from \"react\"\nimport styled from \"@emotion/styled\"\nimport { css } from \"@emotion/core\"\nimport EqualHeight from \"./EqualHeight\"\nimport { breakpoints } from \"../utils/variables\"\n\n// expects children to be a render prop so we can pass refs for EqualHeight\nconst PostListGroup = ({ columns = 3, children }) => {\n  // statically define refs even if less columns are used\n  const refList = [\n    useRef(null),\n    useRef(null),\n    useRef(null),\n    useRef(null)\n  ]\n\n  return (\n    <EqualHeight nodes={refList}>\n      <Container columns={columns}>\n        {children(refList)}\n      </Container>\n    </EqualHeight>\n  )\n}\n\nconst ThreeColumn = css`\n  @media (min-width: ${breakpoints.mobile}) {\n    grid-template-columns: repeat(auto-fill, minmax(30%, 1fr));\n  }\n`\nconst FourColumn = css`\n  @media (min-width: ${breakpoints.mobile}) {\n    grid-template-columns: repeat(auto-fill, minmax(45%, 1fr));\n  }\n\n  @media (min-width: ${breakpoints.tablet}) {\n    grid-template-columns: repeat(auto-fill, minmax(20%, 1fr));\n  }\n`\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));\n  grid-gap: 40px;\n\n  ${props => props.columns === 3 ? ThreeColumn : FourColumn }\n`\n\nexport default PostListGroup\n"],"sourceRoot":""}